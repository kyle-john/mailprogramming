---
uti: com.xamarin.workbook
id: e0d97d95-57b4-4952-b8f5-325a3f68ec77
title: question02
platforms:
- DotNetCore
---

## 매일프로그래밍 - Question 2

피보나치 배열은 0과 1로 시작하며, 다음 피보나치 수는 바로 앞의 두 피보나치 수의 합이 된다. 정수 N이 주어지면, N보다 작은 모든 짝수 피보나치 수의 합을 구하여라.

예제)

Input: N = 12\
Output: 10 // 0, 1, 2, 3, 5, 8 중 짝수인 2 + 8 = 10.

## 풀이

내가 생각한 풀이 방법은 다음과 같다.

1. 피보나치 수를 구하는 함수를 만든다.

2. N보다 작은 짝수 피보나치를 구해 리스트에 넣는다.

3. 리스트의 합을 구한다.

```csharp
int Fibonacci(int n)
{
    int a = 0;
    int b = 1;

    // In N steps compute Fibonacci sequence iteratively.
    for (int i = 0; i < n; i++)
    {
        int temp = a;
        a = b;
        b = temp + b;
    }

    return a;
}
```

```csharp
int GetSumOfEvenFiboNumber(int n)
{
    var list = new List<int>();

    for (int i = 1; ; i++)
    {
        int num = Fibonacci(i);
        if (num >= n)
            break;

       if (num % 2 == 0)
            list.Add(num);
    }

    return list.Sum();
}
```

```csharp
GetSumOfEvenFiboNumber(13)
// result is 10.
```

## 답안

관련 알고리즘: Even Fibonacci Numbers Sum\
참조: [참고 링크](https://www.geeksforgeeks.org/even-fibonacci-numbers-sum/)

```csharp
// Returns sum of even Fibonacci 
// numbers which are less than or
// equal to given limit.
static int evenFibSum(int limit)
{
    if (limit < 2)
        return 0;
 
    // Initialize first two even
    // prime numbers and their sum
    long ef1 = 0, ef2 = 2;
    long sum = ef1 + ef2;
 
    // calculating sum of even 
    // Fibonacci value
    while (ef2 <= limit)
    {
        // get next even value of 
        // Fibonacci sequence
        long ef3 = 4 * ef2 + ef1;
 
        // If we go beyond limit,
        // we break loop
        if (ef3 > limit)
            break;
 
        // Move to next even number
        // and update sum
        ef1 = ef2;
        ef2 = ef3;
        sum += ef2;
    }
 
    return(int) sum;
}
```

```csharp
evenFibSum(13)
// result is 10.
```